// <auto-generated />
using System;
using BooksApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221109230056_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BooksApi.Models.Auther", b =>
                {
                    b.Property<int>("AutherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AutherId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutherId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.HasKey("AutherId");

                    b.ToTable("Authers");
                });

            modelBuilder.Entity("BooksApi.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AutherId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<string>("Overview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Poster")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("PublishedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutherId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BooksApi.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("BooksApi.Models.Nationality", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AutherId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutherId");

                    b.HasIndex("LanguageId")
                        .IsUnique()
                        .HasFilter("[LanguageId] IS NOT NULL");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("BooksApi.Models.Book", b =>
                {
                    b.HasOne("BooksApi.Models.Auther", "Auther")
                        .WithMany("Books")
                        .HasForeignKey("AutherId");

                    b.Navigation("Auther");
                });

            modelBuilder.Entity("BooksApi.Models.Nationality", b =>
                {
                    b.HasOne("BooksApi.Models.Auther", "auther")
                        .WithMany("Nationalities")
                        .HasForeignKey("AutherId");

                    b.HasOne("BooksApi.Models.Language", "Language")
                        .WithOne("Nationality")
                        .HasForeignKey("BooksApi.Models.Nationality", "LanguageId");

                    b.Navigation("Language");

                    b.Navigation("auther");
                });

            modelBuilder.Entity("BooksApi.Models.Auther", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Nationalities");
                });

            modelBuilder.Entity("BooksApi.Models.Language", b =>
                {
                    b.Navigation("Nationality");
                });
#pragma warning restore 612, 618
        }
    }
}
